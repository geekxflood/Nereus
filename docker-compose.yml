---
services:
  nereus:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VERSION: ${VERSION:-dev}
        BUILD_TIME: ${BUILD_TIME}
        COMMIT_HASH: ${COMMIT_HASH}
    image: geekxflood/nereus:${VERSION:-latest}
    container_name: nereus
    restart: unless-stopped

    # Network configuration
    ports:
      - "162:162/udp" # SNMP trap listener
      - "9090:9090/tcp" # Metrics and health endpoints

    # Environment variables
    environment:
      - NEREUS_CONFIG=/etc/nereus/config.yaml
      - NEREUS_LOG_LEVEL=${LOG_LEVEL:-info}
      - TZ=${TZ:-UTC}

    # Volume mounts
    volumes:
      # Configuration (read-only)
      - ./config:/etc/nereus:ro
      # Persistent data
      - nereus_data:/var/lib/nereus
      # Logs
      - nereus_logs:/var/log/nereus
      # MIB files (optional)
      - ./mibs:/usr/share/snmp/mibs:ro

    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    # Resource limits
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "0.5"
        reservations:
          memory: 256M
          cpus: "0.1"

    # Security
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

    # Dependencies
    depends_on:
      - prometheus
      - alertmanager

    # Networks
    networks:
      - nereus-network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: nereus-prometheus
    restart: unless-stopped

    ports:
      - "9091:9090"

    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus

    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=30d"
      - "--web.enable-lifecycle"

    networks:
      - nereus-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:10.0.0
    container_name: nereus-grafana
    restart: unless-stopped

    ports:
      - "3000:3000"

    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false

    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro

    networks:
      - nereus-network

  # AlertManager for alert routing
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: nereus-alertmanager
    restart: unless-stopped

    ports:
      - "9093:9093"

    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager

    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
      - "--storage.path=/alertmanager"
      - "--web.external-url=http://localhost:9093"

    networks:
      - nereus-network

  # SNMP Simulator for testing
  snmp-simulator:
    image: tandrup/snmpsim
    container_name: nereus-snmp-simulator
    restart: unless-stopped
    profiles:
      - testing

    ports:
      - "1161:161/udp"

    volumes:
      - ./test/snmp-data:/usr/share/snmpsim/data:ro

    networks:
      - nereus-network

  # Webhook test server
  webhook-test:
    image: mendhak/http-https-echo:31
    container_name: nereus-webhook-test
    restart: unless-stopped
    profiles:
      - testing

    ports:
      - "8080:8080"

    environment:
      - HTTP_PORT=8080

    networks:
      - nereus-network

# Named volumes for persistent data
volumes:
  nereus_data:
    driver: local
  nereus_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  alertmanager_data:
    driver: local

# Networks
networks:
  nereus-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

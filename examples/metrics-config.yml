# Example configuration for Nereus SNMP Trap Listener with Metrics enabled
# This configuration demonstrates how to enable and configure Prometheus metrics

# Application configuration
app:
  name: "nereus-snmp-listener"
  version: "1.0.0"
  log_level: "info"
  shutdown_timeout: "30s"

# Logging configuration
logging:
  level: "info"
  format: "json"
  component: "nereus"
  stdout: true

# Metrics configuration
metrics:
  # Enable Prometheus metrics collection
  enabled: true
  
  # Address to bind the metrics HTTP server
  listen_address: ":9090"
  
  # Prometheus metrics endpoint path
  metrics_path: "/metrics"
  
  # Health check endpoint path
  health_path: "/health"
  
  # Readiness check endpoint path
  ready_path: "/ready"
  
  # How often to update system metrics (memory, CPU, etc.)
  update_interval: "30s"
  
  # Prometheus metrics namespace
  namespace: "nereus"

# SNMP Listener configuration
listener:
  bind_address: "0.0.0.0:162"
  max_packet_size: 65507
  read_timeout: "30s"
  workers: 4
  buffer_size: 1000

# Storage configuration
storage:
  type: "sqlite"
  connection_string: "./data/nereus.db"
  max_connections: 10
  retention_days: 30
  cleanup_interval: "1h"

# Event correlation configuration
correlator:
  enabled: true
  deduplication_window: "5m"
  correlation_window: "10m"
  max_groups: 1000
  flapping_threshold: 5
  flapping_window: "2m"

# Notification configuration
notifier:
  enabled: true
  workers: 5
  queue_size: 1000
  retry_attempts: 3
  retry_delay: "5s"
  timeout: "30s"

# MIB configuration
mib:
  directories:
    - "./mibs"
    - "/usr/share/snmp/mibs"
  file_extensions:
    - ".mib"
    - ".txt"
  max_file_size: "10MB"
  enable_hot_reload: true
  cache_enabled: true
  cache_expiry: "1h"

# OID resolver configuration
resolver:
  cache_size: 10000
  cache_ttl: "1h"
  enable_reverse_lookup: true

# HTTP client configuration
client:
  timeout: "30s"
  max_idle_conns: 100
  max_idle_conns_per_host: 10
  idle_conn_timeout: "90s"
  tls_handshake_timeout: "10s"
  expect_continue_timeout: "1s"

# Health check configuration
health_check:
  enabled: true
  interval: "30s"
  timeout: "5s"

# Example webhook configurations
webhooks:
  - name: "slack-alerts"
    url: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
    method: "POST"
    timeout: "30s"
    retry_count: 3
    retry_delay: "5s"
    headers:
      Content-Type: "application/json"
    template: |
      {
        "text": "SNMP Trap Alert",
        "attachments": [
          {
            "color": "danger",
            "fields": [
              {
                "title": "Source IP",
                "value": "{{ .SourceIP }}",
                "short": true
              },
              {
                "title": "Community",
                "value": "{{ .Community }}",
                "short": true
              },
              {
                "title": "Timestamp",
                "value": "{{ .Timestamp }}",
                "short": true
              }
            ]
          }
        ]
      }
    filters:
      - field: "source_ip"
        operator: "matches"
        value: "192\\.168\\..+"
      - field: "community"
        operator: "equals"
        value: "public"

  - name: "pagerduty-critical"
    url: "https://events.pagerduty.com/v2/enqueue"
    method: "POST"
    timeout: "30s"
    retry_count: 5
    retry_delay: "10s"
    headers:
      Content-Type: "application/json"
      Authorization: "Token YOUR_PAGERDUTY_TOKEN"
    template: |
      {
        "routing_key": "YOUR_ROUTING_KEY",
        "event_action": "trigger",
        "payload": {
          "summary": "Critical SNMP Trap from {{ .SourceIP }}",
          "source": "{{ .SourceIP }}",
          "severity": "critical",
          "component": "snmp-trap-listener",
          "group": "network",
          "class": "snmp",
          "custom_details": {
            "community": "{{ .Community }}",
            "version": "{{ .Version }}",
            "timestamp": "{{ .Timestamp }}"
          }
        }
      }
    filters:
      - field: "severity"
        operator: "equals"
        value: "critical"
